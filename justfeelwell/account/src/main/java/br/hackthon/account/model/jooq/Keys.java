/*
 * This file is generated by jOOQ.
 */
package br.hackthon.account.model.jooq;


import br.hackthon.account.model.jooq.tables.Account;
import br.hackthon.account.model.jooq.tables.records.AccountRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>account</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountRecord, Long> IDENTITY_ACCOUNT_ = Identities0.IDENTITY_ACCOUNT_;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_NR_IDENTITY = UniqueKeys0.KEY_ACCOUNT_NR_IDENTITY;
    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_DS_USENAME = UniqueKeys0.KEY_ACCOUNT_DS_USENAME;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccountRecord, Long> IDENTITY_ACCOUNT_ = Internal.createIdentity(Account.ACCOUNT_, Account.ACCOUNT_.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = Internal.createUniqueKey(Account.ACCOUNT_, "KEY_account_PRIMARY", Account.ACCOUNT_.ID);
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_NR_IDENTITY = Internal.createUniqueKey(Account.ACCOUNT_, "KEY_account_nr_identity", Account.ACCOUNT_.NR_IDENTITY);
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_DS_USENAME = Internal.createUniqueKey(Account.ACCOUNT_, "KEY_account_ds_usename", Account.ACCOUNT_.DS_USENAME);
    }
}
