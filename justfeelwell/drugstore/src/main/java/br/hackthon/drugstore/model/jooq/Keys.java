/*
 * This file is generated by jOOQ.
 */
package br.hackthon.drugstore.jooq;


import br.hackthon.drugstore.jooq.tables.Drug;
import br.hackthon.drugstore.jooq.tables.Drugstore;
import br.hackthon.drugstore.jooq.tables.StoreDrugs;
import br.hackthon.drugstore.jooq.tables.records.DrugRecord;
import br.hackthon.drugstore.jooq.tables.records.DrugstoreRecord;
import br.hackthon.drugstore.jooq.tables.records.StoreDrugsRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>drugstore</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DrugRecord, Long> IDENTITY_DRUG = Identities0.IDENTITY_DRUG;
    public static final Identity<DrugstoreRecord, Long> IDENTITY_DRUGSTORE_ = Identities0.IDENTITY_DRUGSTORE_;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DrugRecord> KEY_DRUG_PRIMARY = UniqueKeys0.KEY_DRUG_PRIMARY;
    public static final UniqueKey<DrugRecord> KEY_DRUG_DS_NAME = UniqueKeys0.KEY_DRUG_DS_NAME;
    public static final UniqueKey<DrugstoreRecord> KEY_DRUGSTORE_PRIMARY = UniqueKeys0.KEY_DRUGSTORE_PRIMARY;
    public static final UniqueKey<DrugstoreRecord> KEY_DRUGSTORE_DS_NAME = UniqueKeys0.KEY_DRUGSTORE_DS_NAME;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<StoreDrugsRecord, DrugstoreRecord> STORE_DRUGS_IBFK_1 = ForeignKeys0.STORE_DRUGS_IBFK_1;
    public static final ForeignKey<StoreDrugsRecord, DrugRecord> STORE_DRUGS_IBFK_2 = ForeignKeys0.STORE_DRUGS_IBFK_2;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<DrugRecord, Long> IDENTITY_DRUG = Internal.createIdentity(Drug.DRUG, Drug.DRUG.ID_DRUG);
        public static Identity<DrugstoreRecord, Long> IDENTITY_DRUGSTORE_ = Internal.createIdentity(Drugstore.DRUGSTORE_, Drugstore.DRUGSTORE_.ID_STORE);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DrugRecord> KEY_DRUG_PRIMARY = Internal.createUniqueKey(Drug.DRUG, "KEY_drug_PRIMARY", Drug.DRUG.ID_DRUG);
        public static final UniqueKey<DrugRecord> KEY_DRUG_DS_NAME = Internal.createUniqueKey(Drug.DRUG, "KEY_drug_ds_name", Drug.DRUG.DS_NAME);
        public static final UniqueKey<DrugstoreRecord> KEY_DRUGSTORE_PRIMARY = Internal.createUniqueKey(Drugstore.DRUGSTORE_, "KEY_drugstore_PRIMARY", Drugstore.DRUGSTORE_.ID_STORE);
        public static final UniqueKey<DrugstoreRecord> KEY_DRUGSTORE_DS_NAME = Internal.createUniqueKey(Drugstore.DRUGSTORE_, "KEY_drugstore_ds_name", Drugstore.DRUGSTORE_.DS_NAME);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<StoreDrugsRecord, DrugstoreRecord> STORE_DRUGS_IBFK_1 = Internal.createForeignKey(br.hackthon.drugstore.jooq.Keys.KEY_DRUGSTORE_PRIMARY, StoreDrugs.STORE_DRUGS, "store_drugs_ibfk_1", StoreDrugs.STORE_DRUGS.ID_STORE);
        public static final ForeignKey<StoreDrugsRecord, DrugRecord> STORE_DRUGS_IBFK_2 = Internal.createForeignKey(br.hackthon.drugstore.jooq.Keys.KEY_DRUG_PRIMARY, StoreDrugs.STORE_DRUGS, "store_drugs_ibfk_2", StoreDrugs.STORE_DRUGS.ID_DRUG);
    }
}
